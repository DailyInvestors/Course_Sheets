f•••✨ Testing Forms•••🪄
•°•°•°•°•°•°•°•°•°•°•°•°•°•°•°•°•°•
Resources: Perplexity 

"https://chrome.google.com/webstore/detail/form-troubleshooter/lpjhcgjbicfdoijennopbjooigfipfjh"

"https://support.google.com/analytics/answer/1010054"

"https://support.google.com/analytics/answer/1033021"

"https://web.dev/vitals-tools-workflow"

"https://developer.chrome.com/docs/lighthouse/overview#devtools"

"https://developers.google.com/speed/docs/insights/v5/about/"

"https://www.microsoft.com/design/inclusive/"

"https://web.dev/articles/how-to-review"

"https://web.dev/articles/user-centric-performance-metrics"

"https://support.google.com/analytics/answer/6180923"

"https://web.dev/articles/color-and-contrast-accessibility"

"https://web.dev/articles/performance-poor-connectivity#testing"
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1. Does your form work on all Devices???
°° First Test on your Device
°° Next test on your Desktop
•• Now keyboards
°° Touch
•• Mouse
•• If you have different devices, such as I do. Test with them now.
•• Dev Tools also allows you to switch between Devices
•• Try Different Networks
•• With different Security Features
•• Have others Test it, watch their Reactions.
•• Have several different AIs test and check it. This way it covers Humans and Machine.
•• After you have both Human and AI, ask them follow-up Questions. For suggestions? Every Free Opinion is better then None.
°° Now try in different Languages.
°° Try with different coding Languages.
°° Ask a Expert, one of us will Gladly Help.
•• Research 
•• Try different addresses 
•• Different area codes 
•• Try different attacks/tests
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
°°Measuring°°
°° There are several ways I will talk about measuring. My preferred method for Everything is Dev Tools. Now some users may prefer Burp Suite, Requestly, etc to test. However in my opinion as a Specialist, Dev Tools and Mozillas Dev Tools are the best options for Testing.

1. PS1: PageSpeed Insights
•• Reports using field data.
•• We can use their API to build our own Monitoring Tool.
•• Includes data from the Chrome User Experience.

2. Lighthouse
••Identifies performance, SEO, best practice roles, and accessibility issues.
••Basically a self-perforned Audit.
°° Can be command-line.
•• Can be a Node Module
•• Can be used with the Lighthouse-CI Tool.
•• Can be ran with GitHub Actions and probably their AI as well.

3. Form Trouble-Shooter Extension

4. Wave

5. Axe

3-5 Notify you of basics basically, such as missing labels, missed connections, etc 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
°° How to Analyze °°
1. Create a custom program
2. Convert files
3. Create Robots, or analytic cookies to your preferred choice of custom server.
4. Google Analytics 
•• Contains Snippets we can use. Or you can ask any AI for Snippets and Skeletons.
5. If you want any type of custom Analytics, just ask 😉
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
••We can add {focus indicators} using the :focus CSS pseudo-class.

input:focus {
  outline: 4px solid #222;
}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
•• Telephone Skeleton:

<main>
  <div class="wrapper">
    <form>
      <div>
        <label for="number">Telephone number</label>
        <input type="tel" id="number" name="number">
      </div>
      <button>Save</button>
    </form>
  </div>
</main>

••CSS Value:
button {
  margin-top: 1rem;
}

•••One way we can test a button is by the env(). This will help determine if our button is visible or hidden.•••
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
•••Goal Funnels°°°
••A goal funnel ({conversion funnel} is a series of interactions that lead to a goal. Such as adding a Attribute. {conversion} Basically defining and accomplishing your Goal/s•••

••Example:
A user opens page C with the form.
The user fills out the <label>.
The user fills out the area code field.
The user creates the form.
The user navigates through JavaScript•••
🚨 Note: This above is the Google way. How I prefer to do this. Use a Task manager, Create one for Short Term. One for Medium and Long. Then take your Biggest Goal, and brake it down to Byte Size Pieces, and place them in your categories. Personally, I choose the hardest first, and save the easiest for last.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
•••Example of a Custom Event•••
// Step 1: Create the custom event with analytics data
const analyticsEvent = new CustomEvent('trackAnalytics', {
  detail: {
    category: 'Button',
    action: 'Click',
    label: 'Signup Button'
  }
});

// Step 2: Listen for the custom event (e.g., in your analytics handler)
document.addEventListener('trackAnalytics', function(e) {
  // Replace with your analytics tracking logic
  console.log('Analytics Event:', e.detail);
  // Example: analytics.track(e.detail.category, e.detail.action, e.detail.label);
});

// Step 3: Dispatch the event when tracking is needed
document.dispatchEvent(analyticsEvent);


•••✨Remember we can create Custom Events for Everything, including every single👁️‍🗨️ Mechanism that makes up your Page or Application.👾

••• We can also set up Event Alarm's and Reports to be sent via our Custom Techniques°°°
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
